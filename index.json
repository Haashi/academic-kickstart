[{"authors":["haashi"],"categories":null,"content":"My name is Baptiste Pontanier, and I am a French Engineer in Information Technologies. I really love IT, and the wide range of diverse projects you can work on.\nIt has been 4 years now I work in IT, and I don't plan to stop anytime soon. I don't have a specific area of expertise, I try to keep a wide range of skills.\nWith this website, I plan to share some posts and projects I begin to work on (and hopefully when I finish them).\nI'm currently not looking for a job/gig, but you still can get in touch or download an offline resume.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"c545d1fb9f3207f676d07911aeb00cef","permalink":"https://www.haashi.fr/authors/haashi/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/haashi/","section":"authors","summary":"My name is Baptiste Pontanier, and I am a French Engineer in Information Technologies. I really love IT, and the wide range of diverse projects you can work on.\nIt has been 4 years now I work in IT, and I don't plan to stop anytime soon. I don't have a specific area of expertise, I try to keep a wide range of skills.\nWith this website, I plan to share some posts and projects I begin to work on (and hopefully when I finish them).","tags":null,"title":"Baptiste Pontanier","type":"authors"},{"authors":[],"categories":[],"content":"This add-on shows a diagram to illustrate the time spent in all states of a ticket.\nIt was developped during my first internship 4 years ago.\nTechnologies used :\n Perl HTML CSS  ","date":1579785135,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579785135,"objectID":"0581785492fed4fade7897114a9b6dc6","permalink":"https://www.haashi.fr/project/otrsticketstatehistory/","publishdate":"2020-01-23T14:12:15+01:00","relpermalink":"/project/otrsticketstatehistory/","section":"project","summary":"Add-on to Open-source Ticket Request System","tags":["other"],"title":"OTRS Ticket State History","type":"project"},{"authors":[],"categories":[],"content":"This community mod helps to create new features and contents to the game. It has become the supported way of modding the game.\nI especially helped for the potions features. The project has since growed, and my codebase might have been reworked.\nTechnologies used :\n Java Runtime Reflections  ","date":1579778468,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579778468,"objectID":"7d0ee02150a8270d9f993abb1298fef8","permalink":"https://www.haashi.fr/project/stsbasemod/","publishdate":"2020-01-23T12:21:08+01:00","relpermalink":"/project/stsbasemod/","section":"project","summary":"Modding interface for the game Slay the Spire","tags":["game"],"title":"Slay the Spire - Basemod","type":"project"},{"authors":[],"categories":[],"content":"Small snake game, using this implementation as a base : https://www.youtube.com/watch?v=AaGK-fj-BAM on top of which I added multiplayer using NodeJS.\nIn the implementation, the server is authority and send the whole game state to the clients.\nTechnologies used for this project :\n JavaScript NodeJS SocketIO  ","date":1579777151,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579777151,"objectID":"4299070e73731bebf50509810f87b967","permalink":"https://www.haashi.fr/project/snakenode/","publishdate":"2020-01-23T11:59:11+01:00","relpermalink":"/project/snakenode/","section":"project","summary":"Snake multiplayer game.","tags":["game"],"title":"SnakeNode","type":"project"},{"authors":[],"categories":[],"content":"Mod for private server of the programming game Screeps.\nThe mod allows to serve static welcome page for browser connections. Useful if you wanna show more informations than the basic \u0026lsquo;Screeps is running on address:port\u0026rsquo;.\nThe mod was working 2 years ago, I do not know if it works anymore with newer versions. Written in NodeJS.\n","date":1579776290,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579776290,"objectID":"a8f3fbb04637e00f783bfb3619a68ea3","permalink":"https://www.haashi.fr/project/screepsmod-httpwelcome/","publishdate":"2020-01-23T11:44:50+01:00","relpermalink":"/project/screepsmod-httpwelcome/","section":"project","summary":"A mod for the Screeps private server.","tags":["game"],"title":"screepsmod-httpwelcome","type":"project"},{"authors":[],"categories":[],"content":"This project was pretty straightforward. The use case is really poor, a lot of tools can do that, and better.\nMy goal was to try out a Cloud Provider and see by myself how \u0026ldquo;serverless\u0026rdquo; is relevant. I used Google Cloud for that project, I had no credits left on Amazon Web Services but could have used it as well.\nLasted about 2 days. I will not do a post about it, and I deleted the project on the Google Cloud plateform 3 months after.\nTechnologies used for this project :\n ReactJS TypeScript Firebase Google Cloud  ","date":1579774152,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579774152,"objectID":"a044c79c11904b710d75db4f7b7d6ade","permalink":"https://www.haashi.fr/project/remindme/","publishdate":"2020-01-23T11:09:12+01:00","relpermalink":"/project/remindme/","section":"project","summary":"Website to make reminder via e-mail.","tags":["web","cloud"],"title":"Remindme","type":"project"},{"authors":null,"categories":null,"content":"Technologies used for this project :\n Hugo Academic Continuous Delivery GitHub  ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"c22151519d8cf81a3fa31ce33b2c2556","permalink":"https://www.haashi.fr/project/portfolio/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/portfolio/","section":"project","summary":"The website you are currently browsing","tags":["web"],"title":"Portfolio","type":"project"},{"authors":null,"categories":null,"content":"I've been looking to rework my \u0026ldquo;portfolio\u0026rdquo; website. This old website, was built from scratch using ReactJS with Bootstrap and w3css. It was pretty easy to maintain until I needed to update my status. Unlike how Hugo works, the website was not generating pages over static content. So every time I needed to add a work experience or a project, I needed to create the content, and include it in my website by adding a new react component in the appropriate JSX. You can have a look at the old website here, and its code there.\nThis is where I like Hugo, it helps you separate content from how it is displayed. Using Hugo templating system, you tell how you want your content to be displayed. In most case, you want a template for each type of content you have. Here on this website, there is two main types of content : \u0026ldquo;post\u0026rdquo; and \u0026ldquo;project\u0026rdquo;. Once those templates are created, you only need to create contents using markdown files. The templating system can access metadata called \u0026ldquo;Front matter\u0026rdquo; of a markdown file. They are the first thing to needed to be declared inside a content. Example for this post :\n+++ authors = [] date = 2020-01-03T11:00:00Z draft = true featured = false projects = [] subtitle = \u0026quot;Using Hugo, Academic, and Forestry\u0026quot; summary = \u0026quot;Learn how I built this website using Hugo and Academic, the little changes I made to match my old design, and how I keep posting from any devices using Forestry.\u0026quot; tags = [] title = \u0026quot;How I built this website and I how I maintain it\u0026quot; [image] caption = \u0026quot;Caption\u0026quot; focal_point = \u0026quot;Smart\u0026quot; placement = 0 +++  You can learn more about the Hugo framework on their website here. After knowing I had to use Hugo to achieve my goal of easy maintain, I read the docs to get started. And one of the very few things they tell you about, are Themes. Themes are a collection of display templates. And knowing how bad I am at designing (and CSS), this was the icing on the cake. I browsed the themes from the Hugo site, with different criteria in mind : portfolio alike, internationalization (english and french), blog alike, responsive. One of the themes that matched all of these was Academic. Funny thing is that Academic (see the demo) can do much more than that. It can manage multiple users posting, team display, external link to online publications and even online courses !\nTo get started with the Theme, I forked the academic-kickstart repository on github. From there, it becomes really easy, you can just delete features you don't need. From the homepage, I only needed to display a short bio, my work experiences, my skills and contact informations (not a form because I would rather people to use their own way to contact me). I also edited the work experience template to support keywords (mainly to display technologies involved in the job). The academic template doesn't support this natively. I had this feature on my old website, and wanted to keep this for the new design. Thanks to the Hugo template lookup order, you can override a template from a theme with one of yours. I copied the template from the theme, edited the template to loop over the keywords and display theme using simple CSS (this is the most advanced I can do) :\nFrom there, I created all the contents about me, most of them were copy pasted from my old website. Now that everything was created, we need to deploy it. My previous portfolio was hosted on GitHub pages. I had no issue with it in 2 years, so I decided to use it again, but this time, improved thanks to one of the new features of GitHub : Actions. Using Actions, I can tell GitHub to build my website using a Hugo Docker and push it to the gh-pages branch which is served over my domain (the setting of a domain for GitHub pages is beyond the scope of this post). Here is the action I use :\nname: github pages on: push: branches: - master jobs: build-deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v1 with: submodules: true - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.61.0' extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v2 env: ACTIONS_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }} PUBLISH_BRANCH: gh-pages PUBLISH_DIR: ./public  Pretty easy to read, every time there is a push on the master branch, it uses the checkout action (with submodules on because hugo themes are git submodules !), a hugo docker to build the page, and then another docker to deploy on the gh-pages branch.\nWith that, I have a fully working continuous delivery process once I push or merge to the master branch. I can now focus on writing content and not worry about how will I update my website.\nBut can we take it even further ? Meet forestry. Forestry is a git-backed content management system working with most static pages frameworks out in the wild. It also is pretty easy to deploy, you just need to register your website, and add a static page to access it (often /admin). Once set up, you can edit any content using a richtext editor, from any device by accessing yourwebsite.com/admin and connecting with your forestry login (or oauth2).\nNow you can edit content from your favorite IDE/text editor, or doing it from your phone. Forestry will save your edits by committing directly to your repo (thus triggering the CD with set up earlier).\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"24f56ed3486bc7a0bbf16784d0426afa","permalink":"https://www.haashi.fr/post/portfolio/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/portfolio/","section":"post","summary":"Learn how I built this website using Hugo and Academic, the little changes I made to match my old design, and how I keep posting from any devices using Forestry.","tags":["web"],"title":"How I built this website and I how I maintain it","type":"post"}]